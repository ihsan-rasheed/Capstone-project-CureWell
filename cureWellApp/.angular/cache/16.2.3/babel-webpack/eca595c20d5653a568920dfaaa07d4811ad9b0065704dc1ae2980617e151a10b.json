{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Doctor } from './doctor';\nimport { Specialization } from './specialization.model';\nimport { Surgery } from './surgery.model';\nimport { DoctorSpecialization } from './doctor-specialization.model';\nexport let RestServiceService = class RestServiceService {\n  constructor(objHttp, privater) {\n    this.objHttp = objHttp;\n    this.dData = new Doctor();\n    this.sData = new Specialization();\n    this.SurgeryData = new Surgery();\n    this.dSpecializationData = new DoctorSpecialization();\n    this.apiUrl = 'http://localhost:5075/api/Doctors';\n    this.apiUrl2 = 'http://localhost:5075/api/specializations';\n    this.apiUrl3 = 'http://localhost:5075/api/doctorspecializations';\n    this.apiUrl4 = 'http://localhost:5075/api/Surgeries';\n    this.apiUrl5 = 'http://localhost:5075/api/Surgeries/GetAllSurgeries';\n  }\n  addDoctor() {\n    return this.objHttp.post(this.apiUrl, this.dData);\n  }\n  editDoctorDetails() {\n    return this.objHttp.put(this.apiUrl + '/' + this.dData.DoctorId, this.dData);\n  }\n  deleteDoctor(id) {\n    return this.objHttp.delete(this.apiUrl + '/' + id);\n  }\n  getDoctors() {\n    this.objHttp.get(this.apiUrl).toPromise().then(res => this.dList = res);\n  }\n  getDoctorById(id) {\n    return this.objHttp.get(this.apiUrl + '/' + id);\n  }\n  specialization_List() {\n    this.objHttp.get(this.apiUrl2).toPromise().then(res => this.specializationList = res);\n  }\n  getDoctorsBySpecializations(specialization) {\n    const apiUrl = `${this.apiUrl3}/GetDoctorsBySpecialization/${specialization}`;\n    this.objHttp.get(apiUrl).toPromise().then(res => this.dspecializationList = res);\n    this.router.navigate([\"doctorSpecialization\"]);\n    this.serv.DoctorSpecializationName = specialization;\n  }\n  addSpecialization() {\n    return this.objHttp.post(this.apiUrl2, this.sData);\n  }\n  getTodaySurgery() {\n    return this.objHttp.get(this.apiUrl4).toPromise().then(res => this.surgeryList = res);\n  }\n  addSurgery() {\n    return this.objHttp.post(this.apiUrl4, this.SurgeryData);\n  }\n  editSurgeryTime() {\n    return this.objHttp.put(this.apiUrl4 + '/' + this.SurgeryData.SurgeryId, this.SurgeryData);\n  }\n  getSurgeryById(id) {\n    return this.objHttp.get(this.apiUrl4 + '/' + id);\n  }\n  getAllSurgery() {\n    this.objHttp.get(this.apiUrl5).toPromise().then(res => this.AllsurgeryList = res);\n  }\n  addDoctorSpecialization() {\n    return this.objHttp.post(this.apiUrl3, this.dSpecializationData);\n  }\n  DoctorSpecializationList() {\n    this.objHttp.get(this.apiUrl3).toPromise().then(res => this.dSpecializationList = res);\n  }\n};\nRestServiceService = __decorate([Injectable({\n  providedIn: 'root'\n})], RestServiceService);","map":{"version":3,"names":["Injectable","Doctor","Specialization","Surgery","DoctorSpecialization","RestServiceService","constructor","objHttp","privater","dData","sData","SurgeryData","dSpecializationData","apiUrl","apiUrl2","apiUrl3","apiUrl4","apiUrl5","addDoctor","post","editDoctorDetails","put","DoctorId","deleteDoctor","id","delete","getDoctors","get","toPromise","then","res","dList","getDoctorById","specialization_List","specializationList","getDoctorsBySpecializations","specialization","dspecializationList","router","navigate","serv","DoctorSpecializationName","addSpecialization","getTodaySurgery","surgeryList","addSurgery","editSurgeryTime","SurgeryId","getSurgeryById","getAllSurgery","AllsurgeryList","addDoctorSpecialization","DoctorSpecializationList","dSpecializationList","__decorate","providedIn"],"sources":["C:\\SOTI Training\\CapStoneProject\\Final\\Capstone-Project\\cureWellApp\\src\\app\\shared\\rest-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport{HttpClient}from '@angular/common/http'\nimport { Doctor } from './doctor';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Specialization } from './specialization.model';\nimport { Surgery } from './surgery.model';\nimport { DoctorSpecialization } from './doctor-specialization.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestServiceService {\n\n  constructor(private objHttp:HttpClient,privater) { }\n\n  dData:Doctor=new Doctor();\n  sData:Specialization=new Specialization();\n  SurgeryData:Surgery=new Surgery();\n  dSpecializationData:DoctorSpecialization=new DoctorSpecialization();\n  \n\n  readonly apiUrl='http://localhost:5075/api/Doctors';\n  readonly apiUrl2='http://localhost:5075/api/specializations';\n  readonly apiUrl3='http://localhost:5075/api/doctorspecializations';\n  readonly apiUrl4='http://localhost:5075/api/Surgeries';\n  readonly apiUrl5='http://localhost:5075/api/Surgeries/GetAllSurgeries';\n\n\n  dList:Doctor[];\n  specializationList:Specialization[];\n  surgeryList:Surgery[];\n  AllsurgeryList:Surgery[];\n  dspecializationList:Doctor[];\n  DoctorSpecializationName:string;\n  dSpecializationList:DoctorSpecialization[];\n  \n\n  addDoctor()\n  {\n    return this.objHttp.post(this.apiUrl,this.dData);\n  }\n\n  editDoctorDetails()\n  {\n    return this.objHttp.put(this.apiUrl+'/'+this.dData.DoctorId,this.dData);\n  }\n\n  deleteDoctor(id)\n  {\n    return this.objHttp.delete(this.apiUrl+'/'+id);\n  }\n\n  getDoctors(){\n    this.objHttp.get(this.apiUrl).toPromise().then(res=>this.dList=res as Doctor[]);\n  }\n\n  getDoctorById(id:number):Observable<any>{\n    return this.objHttp.get<any>(this.apiUrl+'/'+id);\n  }\n\n  specialization_List()\n  {\n    this.objHttp.get(this.apiUrl2).toPromise().then(res=>this.specializationList=res as Specialization[]);\n  }\n\n  getDoctorsBySpecializations(specialization: string) {\n    const apiUrl = `${this.apiUrl3}/GetDoctorsBySpecialization/${specialization}`;\n    this.objHttp.get<Doctor[]>(apiUrl).toPromise().then(res => this.dspecializationList = res as Doctor[]);\n    this.router.navigate([\"doctorSpecialization\"]);\n    this.serv.DoctorSpecializationName=specialization;\n\n  }\n\n  addSpecialization()\n  {\n    return this.objHttp.post(this.apiUrl2,this.sData);\n  }\n\n  getTodaySurgery()\n  {\n    return this.objHttp.get(this.apiUrl4).toPromise().then(res=>this.surgeryList=res as Surgery[]);\n  }\n  addSurgery()\n  {\n    return this.objHttp.post(this.apiUrl4,this.SurgeryData);\n  }\n\n  editSurgeryTime()\n  {\n    return this.objHttp.put(this.apiUrl4+'/'+this.SurgeryData.SurgeryId,this.SurgeryData);\n  }\n\n  getSurgeryById(id:number):Observable<any>\n  {\n    return this.objHttp.get<any>(this.apiUrl4+'/'+id);\n  }\n\n  getAllSurgery(){\n    this.objHttp.get(this.apiUrl5).toPromise().then(res=>this.AllsurgeryList=res as Surgery[]);\n  }\n  addDoctorSpecialization(){\n\n    return this.objHttp.post(this.apiUrl3,this.dSpecializationData)\n\n  }\n  DoctorSpecializationList(){\n\n    this.objHttp.get(this.apiUrl3).toPromise().then(res=>this.dSpecializationList=res as DoctorSpecialization[])\n\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}