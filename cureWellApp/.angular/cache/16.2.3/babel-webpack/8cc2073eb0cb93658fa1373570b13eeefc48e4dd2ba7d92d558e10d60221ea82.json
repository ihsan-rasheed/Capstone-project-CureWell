{"ast":null,"code":"var _class;\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ViewDoctorComponent } from './components/Doctor/view-doctor/view-doctor.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { UpdateDocComponent } from './Doctor/update-doc/update-doc.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@auth0/angular-jwt\";\nexport function tokenGetter() {\n  return localStorage.getItem(\"jwt\");\n}\nexport class AppModule {}\n_class = AppModule;\n_class.ɵfac = function AppModule_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _class,\n  bootstrap: [AppComponent]\n});\n_class.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [BrowserModule, AppRoutingModule, FormsModule, ReactiveFormsModule, HttpClientModule, JwtModule.forRoot({\n    config: {\n      tokenGetter: tokenGetter,\n      allowedDomains: [\"localhost:5001\"],\n      disallowedRoutes: []\n    }\n  })]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, LoginComponent, ViewDoctorComponent, UpdateDocComponent],\n    imports: [BrowserModule, AppRoutingModule, FormsModule, ReactiveFormsModule, HttpClientModule, i1.JwtModule]\n  });\n})();","map":{"version":3,"names":["BrowserModule","AppRoutingModule","AppComponent","LoginComponent","FormsModule","ReactiveFormsModule","ViewDoctorComponent","HttpClientModule","JwtModule","UpdateDocComponent","tokenGetter","localStorage","getItem","AppModule","bootstrap","forRoot","config","allowedDomains","disallowedRoutes","declarations","imports","i1"],"sources":["C:\\Users\\ajayan\\source\\repos\\cureWellApp\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ViewDoctorComponent } from './components/Doctor/view-doctor/view-doctor.component';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { authGuard } from './guards/auth.guard';\nimport { UpdateDocComponent } from './Doctor/update-doc/update-doc.component';\n\nexport function tokenGetter() { \n  return localStorage.getItem(\"jwt\"); \n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ViewDoctorComponent,\n    UpdateDocComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        allowedDomains: [\"localhost:5001\"],\n        disallowedRoutes: []\n      }\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"],"mappings":";AACA,SAASA,aAAa,QAAQ,2BAA2B;AAEzD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,gBAAgB;AACjE,SAASC,mBAAmB,QAAQ,uDAAuD;AAC3F,SAAqBC,gBAAgB,QAAQ,sBAAsB;AACnE,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,SAASC,kBAAkB,QAAQ,0CAA0C;;;AAE7E,OAAM,SAAUC,WAAWA,CAAA;EACzB,OAAOC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;AACpC;AA0BA,OAAM,MAAOC,SAAS;SAATA,SAAS;;mBAATA,MAAS;AAAA;;QAATA,MAAS;EAAAC,SAAA,GAFRZ,YAAY;AAAA;;YAdtBF,aAAa,EACbC,gBAAgB,EAChBG,WAAW,EACXC,mBAAmB,EACnBE,gBAAgB,EAChBC,SAAS,CAACO,OAAO,CAAC;IAChBC,MAAM,EAAE;MACNN,WAAW,EAAEA,WAAW;MACxBO,cAAc,EAAE,CAAC,gBAAgB,CAAC;MAClCC,gBAAgB,EAAE;;GAErB,CAAC;AAAA;;2EAKOL,SAAS;IAAAM,YAAA,GAtBlBjB,YAAY,EACZC,cAAc,EACdG,mBAAmB,EACnBG,kBAAkB;IAAAW,OAAA,GAGlBpB,aAAa,EACbC,gBAAgB,EAChBG,WAAW,EACXC,mBAAmB,EACnBE,gBAAgB,EAAAc,EAAA,CAAAb,SAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}