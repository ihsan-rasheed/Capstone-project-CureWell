{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/rest-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../nav/nav.component\";\nfunction UpdateDocComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UpdateDocComponent {\n  constructor(objService, route) {\n    this.objService = objService;\n    this.route = route;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const doctorId = +params['id'];\n      this.objService.getDoctorById(doctorId).subscribe(doctor => {\n        this.objService.dData = doctor; // Assuming this is how you set the form data\n      });\n    });\n\n    this.resetForm();\n  }\n  resetForm(form) {\n    if (form != null) {\n      form.form.reset();\n    } else {\n      this.objService.dData = {\n        DoctorId: 0,\n        DoctorName: ''\n      };\n    }\n  }\n  onSubmit(form) {\n    this.updateRecord(form);\n  }\n  updateRecord(form) {\n    this.objService.editDoctorDetails().subscribe(res => {\n      this.resetForm();\n      this.objService.getDoctors();\n      alert('Doctor Record updated!!!');\n    }, err => {\n      alert('Error!!!' + err);\n    });\n  }\n}\n_class = UpdateDocComponent;\n_class.ɵfac = function UpdateDocComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.RestServiceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-update-doc\"]],\n  decls: 29,\n  vars: 4,\n  consts: [[1, \"container\", \"mt-5\", \"text-center\"], [1, \"row\"], [1, \"col-md-6\", \"mx-auto\"], [1, \"text-center\", \"text-dark\"], [1, \"text-dark-subtle\", \"text-center\", \"m-4\"], [\"autocomplete\", \"off\", 3, \"submit\"], [\"form\", \"ngForm\"], [1, \"input-group-text\", \"bg-white\"], [1, \"m-2\"], [\"required\", \"true\", \"name\", \"DoctorId\", \"placeholder\", \"Doctor Id\", \"disabled\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"DoctorId\", \"ngModel\"], [\"required\", \"true\", \"name\", \"DoctorName\", \"placeholder\", \"Doctor Name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"DoctorName\", \"ngModel\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"form-group\"], [\"type\", \"submit\", 1, \"m-4\", 3, \"disabled\"], [\"href\", \"/doctor\"], [1, \"text-danger\"]],\n  template: function UpdateDocComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelement(0, \"app-nav\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"h2\", 3);\n      i0.ɵɵtext(5, \"Update Doctor\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\", 4)(7, \"b\");\n      i0.ɵɵtext(8, \"All fields are mandatory\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"form\", 5, 6);\n      i0.ɵɵlistener(\"submit\", function UpdateDocComponent_Template_form_submit_9_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r0 = i0.ɵɵreference(10);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8)(13, \"b\");\n      i0.ɵɵtext(14, \"Doctor Id\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"input\", 9, 10);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateDocComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.objService.dData.DoctorId = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 7)(18, \"label\", 8)(19, \"b\");\n      i0.ɵɵtext(20, \"Doctor Name\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"input\", 11, 12);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateDocComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.objService.dData.DoctorName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(23, UpdateDocComponent_div_23_Template, 2, 0, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 14)(25, \"button\", 15);\n      i0.ɵɵtext(26, \" Update \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"a\", 16);\n      i0.ɵɵtext(28, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(10);\n      const _r2 = i0.ɵɵreference(22);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngModel\", ctx.objService.dData.DoctorId);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.objService.dData.DoctorName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r2.invalid && (_r2.dirty || _r2.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i5.NavComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","UpdateDocComponent","constructor","objService","route","ngOnInit","params","subscribe","doctorId","getDoctorById","doctor","dData","resetForm","form","reset","DoctorId","DoctorName","onSubmit","updateRecord","editDoctorDetails","res","getDoctors","alert","err","ɵɵdirectiveInject","i1","RestServiceService","i2","ActivatedRoute","selectors","decls","vars","consts","template","UpdateDocComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","UpdateDocComponent_Template_form_submit_9_listener","ɵɵrestoreView","_r4","_r0","ɵɵreference","ɵɵresetView","UpdateDocComponent_Template_input_ngModelChange_15_listener","$event","UpdateDocComponent_Template_input_ngModelChange_21_listener","ɵɵtemplate","UpdateDocComponent_div_23_Template","ɵɵadvance","ɵɵproperty","_r2","invalid","dirty","touched"],"sources":["C:\\Users\\ajayan\\source\\repos\\cureWellApp\\src\\app\\Doctor\\update-doc\\update-doc.component.ts","C:\\Users\\ajayan\\source\\repos\\cureWellApp\\src\\app\\Doctor\\update-doc\\update-doc.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { RestServiceService } from 'src/app/shared/rest-service.service';\n\n@Component({\n  selector: 'app-update-doc',\n  templateUrl: './update-doc.component.html',\n  styleUrls: ['./update-doc.component.css']\n})\nexport class UpdateDocComponent {\n\n  constructor(public objService: RestServiceService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      const doctorId = +params['id'];\n      this.objService.getDoctorById(doctorId).subscribe((doctor) => {\n        this.objService.dData = doctor; // Assuming this is how you set the form data\n      });\n    });\n    this.resetForm();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.form.reset();\n    } else {\n      this.objService.dData = { DoctorId: 0, DoctorName: '' };\n    }\n  }\n  onSubmit(form: NgForm) {\n    this.updateRecord(form);\n  }\n\n  updateRecord(form: NgForm) {\n    this.objService.editDoctorDetails().subscribe(res => {\n      this.resetForm();\n      this.objService.getDoctors();\n      alert('Doctor Record updated!!!');\n    },\n      err => {\n        alert('Error!!!' + err);\n      })\n  }\n}\n","<app-nav></app-nav>\n\n<div class=\"container mt-5 text-center\">\n\n    <div class=\"row\">\n\n        <div class=\"col-md-6 mx-auto \">\n\n            <h2 class=\"text-center text-dark\">Update Doctor</h2>\n\n            <p class=\"text-dark-subtle text-center m-4\"><b>All fields are mandatory</b></p>\n\n            <form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n\n                <!-- <input type=\"hidden\" name=\"Id\" [value]=\"objService.dData.DoctorId\" /> -->\n\n\n\n                <!-- <div class=\"form-group\">\n\n        <div class=\"input-group\">\n\n          <div class=\"input-group-prepend\">\n\n            <div class=\"input-group-text bg-white\"> -->\n\n                <div class=\"input-group-text bg-white\"> <label class=\"m-2\"><b>Doctor Id</b></label>\n\n                    <input required=\"true\" name=\"DoctorId\" #DoctorId=\"ngModel\" [(ngModel)]=\"objService.dData.DoctorId\"\n                        placeholder=\"Doctor Id\" class=\"form-control\" disabled />\n\n                </div>\n\n                <!-- </div>\n\n          </div>\n\n        </div>\n\n      </div> -->\n\n                <!-- <div class=\"form-group\">\n\n        <div class=\"input-group\">\n\n          <div class=\"input-group-prepend\"> -->\n\n                <div class=\"input-group-text bg-white\">\n\n                    <label class=\"m-2\"><b>Doctor Name</b></label>\n\n                    <input required=\"true\" name=\"DoctorName\" #DoctorName=\"ngModel\"\n                        [(ngModel)]=\"objService.dData.DoctorName\" placeholder=\"Doctor Name\" class=\"form-control\" />\n\n                    <div *ngIf=\"DoctorName.invalid && (DoctorName.dirty || DoctorName.touched)\" class=\"text-danger\">\n\n                        Name is required.\n\n                    </div>\n\n                    <!-- </div>\n\n          </div>\n\n        </div> -->\n\n\n\n                </div>\n\n\n\n                <div class=\"form-group\">\n\n                    <button class=\"m-4\" type=\"submit\" [disabled]=\"form.invalid\">\n\n                        Update\n\n                    </button>\n\n                    <a href=\"/doctor\">Cancel</a>\n\n                </div>\n\n            </form>\n\n        </div>\n\n    </div>\n\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}