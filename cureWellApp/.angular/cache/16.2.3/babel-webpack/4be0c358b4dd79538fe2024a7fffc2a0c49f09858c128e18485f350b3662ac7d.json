{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/shared/auth-service.service\";\nexport class LoginComponent {\n  constructor(http, router, auth) {\n    this.http = http;\n    this.router = router;\n    this.auth = auth;\n    this.credentials = {\n      userName: '',\n      Password: ''\n    };\n  }\n  login(form) {\n    if (form.valid) {\n      this.http.post(\"http://localhost:5095/api/Auth/login\", this.credentials, {\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json\"\n        })\n      }).subscribe({\n        next: res => {\n          const token = res;\n          localStorage.setItem('jwt', token.tokenAccess);\n          this.invalidLogin = false;\n          this.router.navigate([\"doctor\"]);\n          const tokenstring = localStorage.getItem('jwt');\n          console.log('Token:', tokenstring);\n        },\n        error: err => this.invalidLogin = true\n      });\n    }\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthServiceService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 0,\n  vars: 0,\n  template: function LoginComponent_Template(rf, ctx) {},\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["HttpHeaders","LoginComponent","constructor","http","router","auth","credentials","userName","Password","login","form","valid","post","headers","subscribe","next","res","token","localStorage","setItem","tokenAccess","invalidLogin","navigate","tokenstring","getItem","console","log","error","err","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","i3","AuthServiceService","selectors","decls","vars","template","LoginComponent_Template","rf","ctx","styles"],"sources":["C:\\Users\\ajayan\\source\\repos\\cureWellApp\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {NgForm} from '@angular/forms';\nimport { Admin } from 'src/app/_interface/admin.model';\nimport { AuthServiceService } from 'src/app/shared/auth-service.service';\nimport { ResponseToken } from 'src/app/_interface/response-token.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  constructor(private http:HttpClient,private router:Router,private auth:AuthServiceService){}\n\n\n  invalidLogin:boolean\n  credentials:Admin = {userName:'',Password:''}\n\n  login(form:NgForm)  {\n    if(form.valid){\n      this.http.post<ResponseToken>(\"http://localhost:5095/api/Auth/login\",this.credentials,{\n        headers: new HttpHeaders({ \"Content-Type\": \"application/json\"})\n      })\n      .subscribe({\n        next: (res:ResponseToken) => {\n          const token = res;\n          localStorage.setItem('jwt', token.tokenAccess); \n          this.invalidLogin=false;\n          this.router.navigate([\"doctor\"]);\n\n          const tokenstring = localStorage.getItem('jwt');\nconsole.log('Token:', tokenstring);\n\n        },\n        error:  (err: HttpErrorResponse) => this.invalidLogin = true\n      })\n      \n    }\n  }\n}\n"],"mappings":";AAAA,SAAwCA,WAAW,QAAQ,sBAAsB;;;;;AAajF,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAe,EAASC,MAAa,EAASC,IAAuB;IAArE,KAAAF,IAAI,GAAJA,IAAI;IAAoB,KAAAC,MAAM,GAANA,MAAM;IAAgB,KAAAC,IAAI,GAAJA,IAAI;IAItE,KAAAC,WAAW,GAAS;MAACC,QAAQ,EAAC,EAAE;MAACC,QAAQ,EAAC;IAAE,CAAC;EAJ8C;EAM3FC,KAAKA,CAACC,IAAW;IACf,IAAGA,IAAI,CAACC,KAAK,EAAC;MACZ,IAAI,CAACR,IAAI,CAACS,IAAI,CAAgB,sCAAsC,EAAC,IAAI,CAACN,WAAW,EAAC;QACpFO,OAAO,EAAE,IAAIb,WAAW,CAAC;UAAE,cAAc,EAAE;QAAkB,CAAC;OAC/D,CAAC,CACDc,SAAS,CAAC;QACTC,IAAI,EAAGC,GAAiB,IAAI;UAC1B,MAAMC,KAAK,GAAGD,GAAG;UACjBE,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEF,KAAK,CAACG,WAAW,CAAC;UAC9C,IAAI,CAACC,YAAY,GAAC,KAAK;UACvB,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;UAEhC,MAAMC,WAAW,GAAGL,YAAY,CAACM,OAAO,CAAC,KAAK,CAAC;UACzDC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,WAAW,CAAC;QAE1B,CAAC;QACDI,KAAK,EAAIC,GAAsB,IAAK,IAAI,CAACP,YAAY,GAAG;OACzD,CAAC;;EAGN;;SA5BWpB,cAAc;;mBAAdA,MAAc,EAAA4B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,kBAAA;AAAA;;QAAdnC,MAAc;EAAAoC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;EAAAC,MAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}