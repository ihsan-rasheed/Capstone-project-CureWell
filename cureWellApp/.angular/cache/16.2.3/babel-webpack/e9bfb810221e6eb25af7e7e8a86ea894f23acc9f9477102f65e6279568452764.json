{"ast":null,"code":"export const authGuard = (route, state) => {\n  return true;\n};\n// import { Injectable } from '@angular/core';\n// import { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n// import { JwtHelperService } from '@auth0/angular-jwt'\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class AuthGuard implements CanActivate  {\n//   constructor(private router:Router, private jwtHelper: JwtHelperService){}\n//   canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n//     const token = localStorage.getItem(\"jwt\");\n//     if (token && !this.jwtHelper.isTokenExpired(token)){\n//       console.log(this.jwtHelper.decodeToken(token))\n//       return true;\n//     }\n//     this.router.navigate([\"login\"]);\n//     return false;\n//   }\n// }","map":{"version":3,"names":["authGuard","route","state"],"sources":["C:\\Users\\ajayan\\source\\repos\\cureWellApp\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { CanActivateFn } from '@angular/router';\n\nexport const authGuard: CanActivateFn = (route, state) => {\n  return true;\n};\n\n\n// import { Injectable } from '@angular/core';\n// import { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n// import { JwtHelperService } from '@auth0/angular-jwt'\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class AuthGuard implements CanActivate  {\n\n//   constructor(private router:Router, private jwtHelper: JwtHelperService){}\n  \n//   canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n//     const token = localStorage.getItem(\"jwt\");\n\n//     if (token && !this.jwtHelper.isTokenExpired(token)){\n//       console.log(this.jwtHelper.decodeToken(token))\n//       return true;\n//     }\n\n//     this.router.navigate([\"login\"]);\n//     return false;\n//   }\n// }\n"],"mappings":"AAEA,OAAO,MAAMA,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,OAAO,IAAI;AACb,CAAC;AAGD;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}