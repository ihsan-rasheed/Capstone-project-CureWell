{"ast":null,"code":"var _class;\nimport { Doctor } from './doctor';\nimport { Specialization } from './specialization.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RestServiceService {\n  constructor(objHttp) {\n    this.objHttp = objHttp;\n    this.dData = new Doctor();\n    this.sData = new Specialization();\n    this.SurgeryData = new Surgery();\n    this.apiUrl = 'http://localhost:5095/api/Doctors';\n    this.apiUrl2 = 'http://localhost:5095/api/specializations';\n    this.apiUrl3 = 'http://localhost:5095/api/doctorspecializations';\n    this.apiUrl4 = 'http://localhost:5095/api/Surgeries';\n  }\n  getDoctorsBySpecialization(specializationCode) {\n    const url = `${this.apiUrl3}/Doctors?specializationCode=${specializationCode}`;\n    return this.objHttp.get(url);\n  }\n  addDoctor() {\n    return this.objHttp.post(this.apiUrl, this.dData);\n  }\n  editDoctorDetails() {\n    return this.objHttp.put(this.apiUrl + '/' + this.dData.DoctorId, this.dData);\n  }\n  deleteDoctor(id) {\n    return this.objHttp.delete(this.apiUrl + '/' + id);\n  }\n  getDoctors() {\n    this.objHttp.get(this.apiUrl).toPromise().then(res => this.dList = res);\n  }\n  getDoctorById(id) {\n    return this.objHttp.get(this.apiUrl + '/' + id);\n  }\n  specialization_List() {\n    this.objHttp.get(this.apiUrl2).toPromise().then(res => this.specializationList = res);\n  }\n  getTodaySurgery() {\n    return this.objHttp.get(this.apiUrl).toPromise().then(res => this.surgeryList = res);\n  }\n  editSurgeryTime() {\n    return this.objHttp.put(this.apiUrl + '/' + this.SurgeryData.SurgeryId, this.SurgeryData);\n  }\n  getSurgeryById(id) {\n    return this.objHttp.get(this.apiUrl + '/' + id);\n  }\n}\n_class = RestServiceService;\n_class.ɵfac = function RestServiceService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Doctor","Specialization","RestServiceService","constructor","objHttp","dData","sData","SurgeryData","Surgery","apiUrl","apiUrl2","apiUrl3","apiUrl4","getDoctorsBySpecialization","specializationCode","url","get","addDoctor","post","editDoctorDetails","put","DoctorId","deleteDoctor","id","delete","getDoctors","toPromise","then","res","dList","getDoctorById","specialization_List","specializationList","getTodaySurgery","surgeryList","editSurgeryTime","SurgeryId","getSurgeryById","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ajayan\\source\\repos\\cureWellApp\\src\\app\\shared\\rest-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport{HttpClient}from '@angular/common/http'\nimport { Doctor } from './doctor';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Specialization } from './specialization.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestServiceService {\n\n  constructor(private objHttp:HttpClient) { }\n\n  dData:Doctor=new Doctor();\n  sData:Specialization=new Specialization();\n  SurgeryData:Surgery=new Surgery\n  getDoctorsBySpecialization(specializationCode: string): Observable<Doctor[]> {\n    const url = `${this.apiUrl3}/Doctors?specializationCode=${specializationCode}`;\n    return this.objHttp.get<Doctor[]>(url);}\n\n  readonly apiUrl='http://localhost:5095/api/Doctors';\n  readonly apiUrl2='http://localhost:5095/api/specializations';\n  readonly apiUrl3='http://localhost:5095/api/doctorspecializations';\n  readonly apiUrl4='http://localhost:5095/api/Surgeries';\n\n  dList:Doctor[];\n  specializationList:Specialization[];\n  \n\n  addDoctor()\n\n  {\n    return this.objHttp.post(this.apiUrl,this.dData);\n  }\n\n  editDoctorDetails()\n  {\n    return this.objHttp.put(this.apiUrl+'/'+this.dData.DoctorId,this.dData);\n  }\n\n  deleteDoctor(id)\n  {\n    return this.objHttp.delete(this.apiUrl+'/'+id);\n  }\n\n  getDoctors(){\n    this.objHttp.get(this.apiUrl).toPromise().then(res=>this.dList=res as Doctor[]);\n  }\n\n  getDoctorById(id:number):Observable<any>{\n    return this.objHttp.get<any>(this.apiUrl+'/'+id);\n  }\n\n  specialization_List(){\n\n    this.objHttp.get(this.apiUrl2).toPromise().then(res=>this.specializationList=res as Specialization[]);\n\n  }\n\n  getTodaySurgery()\n\n  {\n\n    return this.objHttp.get(this.apiUrl).toPromise().then(res=>this.surgeryList=res as Surgery[]);\n\n   \n\n   \n\n  }\n\n  editSurgeryTime()\n\n \n\n  {\n\n \n\n    return this.objHttp.put(this.apiUrl+'/'+this.SurgeryData.SurgeryId,this.SurgeryData);\n\n \n\n  }\n\n  getSurgeryById(id:number):Observable<any>{\n\n \n\n    return this.objHttp.get<any>(this.apiUrl+'/'+id);\n\n \n\n  }\n\n\n}\n"],"mappings":";AAEA,SAASA,MAAM,QAAQ,UAAU;AAEjC,SAASC,cAAc,QAAQ,wBAAwB;;;AAKvD,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,OAAkB;IAAlB,KAAAA,OAAO,GAAPA,OAAO;IAE3B,KAAAC,KAAK,GAAQ,IAAIL,MAAM,EAAE;IACzB,KAAAM,KAAK,GAAgB,IAAIL,cAAc,EAAE;IACzC,KAAAM,WAAW,GAAS,IAAIC,OAAO,CAAP,CAAO;IAKtB,KAAAC,MAAM,GAAC,mCAAmC;IAC1C,KAAAC,OAAO,GAAC,2CAA2C;IACnD,KAAAC,OAAO,GAAC,iDAAiD;IACzD,KAAAC,OAAO,GAAC,qCAAqC;EAZZ;EAK1CC,0BAA0BA,CAACC,kBAA0B;IACnD,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACJ,OAAO,+BAA+BG,kBAAkB,EAAE;IAC9E,OAAO,IAAI,CAACV,OAAO,CAACY,GAAG,CAAWD,GAAG,CAAC;EAAC;EAWzCE,SAASA,CAAA;IAGP,OAAO,IAAI,CAACb,OAAO,CAACc,IAAI,CAAC,IAAI,CAACT,MAAM,EAAC,IAAI,CAACJ,KAAK,CAAC;EAClD;EAEAc,iBAAiBA,CAAA;IAEf,OAAO,IAAI,CAACf,OAAO,CAACgB,GAAG,CAAC,IAAI,CAACX,MAAM,GAAC,GAAG,GAAC,IAAI,CAACJ,KAAK,CAACgB,QAAQ,EAAC,IAAI,CAAChB,KAAK,CAAC;EACzE;EAEAiB,YAAYA,CAACC,EAAE;IAEb,OAAO,IAAI,CAACnB,OAAO,CAACoB,MAAM,CAAC,IAAI,CAACf,MAAM,GAAC,GAAG,GAACc,EAAE,CAAC;EAChD;EAEAE,UAAUA,CAAA;IACR,IAAI,CAACrB,OAAO,CAACY,GAAG,CAAC,IAAI,CAACP,MAAM,CAAC,CAACiB,SAAS,EAAE,CAACC,IAAI,CAACC,GAAG,IAAE,IAAI,CAACC,KAAK,GAACD,GAAe,CAAC;EACjF;EAEAE,aAAaA,CAACP,EAAS;IACrB,OAAO,IAAI,CAACnB,OAAO,CAACY,GAAG,CAAM,IAAI,CAACP,MAAM,GAAC,GAAG,GAACc,EAAE,CAAC;EAClD;EAEAQ,mBAAmBA,CAAA;IAEjB,IAAI,CAAC3B,OAAO,CAACY,GAAG,CAAC,IAAI,CAACN,OAAO,CAAC,CAACgB,SAAS,EAAE,CAACC,IAAI,CAACC,GAAG,IAAE,IAAI,CAACI,kBAAkB,GAACJ,GAAuB,CAAC;EAEvG;EAEAK,eAAeA,CAAA;IAIb,OAAO,IAAI,CAAC7B,OAAO,CAACY,GAAG,CAAC,IAAI,CAACP,MAAM,CAAC,CAACiB,SAAS,EAAE,CAACC,IAAI,CAACC,GAAG,IAAE,IAAI,CAACM,WAAW,GAACN,GAAgB,CAAC;EAM/F;EAEAO,eAAeA,CAAA;IAQb,OAAO,IAAI,CAAC/B,OAAO,CAACgB,GAAG,CAAC,IAAI,CAACX,MAAM,GAAC,GAAG,GAAC,IAAI,CAACF,WAAW,CAAC6B,SAAS,EAAC,IAAI,CAAC7B,WAAW,CAAC;EAItF;EAEA8B,cAAcA,CAACd,EAAS;IAItB,OAAO,IAAI,CAACnB,OAAO,CAACY,GAAG,CAAM,IAAI,CAACP,MAAM,GAAC,GAAG,GAACc,EAAE,CAAC;EAIlD;;SApFWrB,kBAAkB;;mBAAlBA,MAAkB,EAAAoC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAlBvC,MAAkB;EAAAwC,OAAA,EAAlBxC,MAAkB,CAAAyC,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}